version: '3.8'

services:
  # API Service
  api:
    build:
      context: ..
      dockerfile: src/infrastructure/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../src:/app/src
      - ../data:/app/data
    environment:
      - DATABASE_URL=sqlite:///./data/finance.db
      - VECTOR_DB_PATH=./data/vector_db
      - OLLAMA_API_URL=http://ollama:11434
      - LOG_LEVEL=INFO
    depends_on:
      - ollama
    # Free tier-like resource constraints
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 4G
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ../frontend/src:/app/src
    depends_on:
      - api
    # Free tier-like resource constraints
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/index.html"]
      interval: 30s
      timeout: 5s
      retries: 3

  # MongoDB (optional - can use SQLite instead)
  # Using very minimal configuration to match free tier limits
  mongodb:
    image: mongo:6.0
    command: mongod --wiredTigerCacheSizeGB 0.25 --smallfiles
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=finance_rag
    volumes:
      - mongodb_data:/data/db
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Monitoring (optional, but useful for development)
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    restart: unless-stopped

volumes:
  ollama_data:
  mongodb_data:
  prometheus_data:
  grafana_data: 