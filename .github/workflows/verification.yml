name: Project Verification

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install html-testRunner
      
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 src
      
      - name: Create test data directory if needed
        run: |
          mkdir -p tests/test_data/raw
          mkdir -p tests/test_data/processed
          # If test_transactions.csv doesn't exist, create a sample one
          if [ ! -f tests/test_data/raw/test_transactions.csv ]; then
            echo "date,description,amount,category,account" > tests/test_data/raw/test_transactions.csv
            echo "2023-01-01,Grocery Store,-50.25,Food,Credit Card" >> tests/test_data/raw/test_transactions.csv
            echo "2023-01-02,Gas Station,-35.00,Transportation,Credit Card" >> tests/test_data/raw/test_transactions.csv
            echo "2023-01-03,Salary,2000.00,Income,Checking" >> tests/test_data/raw/test_transactions.csv
          fi
      
      - name: Run tests
        run: python -m tests.run_tests --report
        env:
          DEFAULT_LLM_PROVIDER: huggingface
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY || 'dummy_key_for_ci' }}
          DATA_DIR: tests/test_data
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build
        
      - name: Generate documentation
        run: |
          echo "Generating documentation..."
          pip install mkdocs mkdocs-material
          mkdir -p site_docs
          cp -r docs/* site_docs/
          echo "# Finance RAG Application" > site_docs/index.md
          echo "## Project Documentation" >> site_docs/index.md
          echo "- [Deployment Guide](DEPLOYMENT_GUIDE.md)" >> site_docs/index.md
          echo "- [Cloud Security](CLOUD_SECURITY.md)" >> site_docs/index.md
          echo "- [Monitoring](MONITORING.md)" >> site_docs/index.md
          echo "- [Phase 6 Completion](PHASE_6_COMPLETION.md)" >> site_docs/index.md
      
      - name: Archive documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/ 