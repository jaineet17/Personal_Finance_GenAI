name: Deploy to Development

on:
  push:
    branches: [ dev ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    outputs:
      api_url: ${{ steps.get-api-url.outputs.api_url }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm install -g serverless
          npm install
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Deploy to AWS Lambda
        run: |
          cd src/infrastructure
          serverless deploy --stage dev
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI_DEV }}
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
      
      - name: Get deployed API URL
        id: get-api-url
        run: |
          cd src/infrastructure
          API_URL=$(serverless info --stage dev --verbose | grep -o 'https://[^[:space:]]*.amazonaws.com/dev')
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT
  
  deploy-frontend:
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: |
          cd frontend
          npm install
      
      - name: Build frontend
        run: |
          cd frontend
          echo "VITE_API_ENDPOINT=${{ needs.deploy-backend.outputs.api_url }}" > .env.production
          npm run build
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          working-directory: ./frontend 